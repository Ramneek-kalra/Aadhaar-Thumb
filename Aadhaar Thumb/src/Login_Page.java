
import java.awt.Color;
import java.awt.image.*;
import java.io.*;
import java.sql.*;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.filechooser.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *\
 * @author Ramneek
 */
public class Login_Page extends javax.swing.JFrame {

    /**
     * Creates new form Login_Page
     */
    public Login_Page() {
        initComponents();
    }

    File file=null;
    String c=null;
    String n=null;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aadhaar Thumb : Login Page");
        setExtendedState(this.MAXIMIZED_BOTH);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture1.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("(Login by scanning Finger using attached USB Fingerprint Scanner)");

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Scan Fingerprint");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Timestamp tt = new Timestamp(System.currentTimeMillis());
        try {
            Process ex = Runtime.getRuntime().exec("E:\\Extra Docs\\ftrScanApiEx_v3.3\\ftrScanApiEx.exe");
            BufferedImage img=null;
            JFileChooser jf=new JFileChooser();
            jf.setDialogTitle("Select your Fingerprint!");
            jf.setFileSelectionMode(JFileChooser.FILES_ONLY);
            jf.setMultiSelectionEnabled(false);
            FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg","gif","png","bmp");
            jf.addChoosableFileFilter(filter);
            int rr=jf.showOpenDialog(this);
            if(rr==JFileChooser.APPROVE_OPTION){
                file=new File(jf.getSelectedFile().getAbsolutePath());
                img = ImageIO.read(file);
                ImageIcon ii = new ImageIcon(img);
                DBConnect d = new DBConnect();
                java.sql.Statement stmt = d.SelectConnect();
                ResultSet rs = stmt.executeQuery("select User_Name,User_Finger from user_master");
                Blob blob = null;
                BufferedImage ima=null;
                InputStream in=null;
                ArrayList<Blob> a=new ArrayList<Blob>();
                while(rs.next()){
                    n=rs.getString("User_Name");
                    blob = rs.getBlob("User_Finger");
                    boolean add = a.add(blob);
                    in =blob.getBinaryStream();
                    ima = ImageIO.read(in);
                    ImageIcon iai = new ImageIcon(ima);
                    int total_no_ofPixels = 0;      
                    int image1_PixelColor, red, blue, green;
                    int image2_PixelColor, red2, blue2, green2;
                    float differenceRed, differenceGreen, differenceBlue, differenceForThisPixel;
                    double nonSimilarPixels = 0l, non_Similarity = 0l;
                    for (int row = 0; row < img.getWidth()-1; row++) {
                       for (int column = 0; column < img.getHeight()-1; column++) {
                             image1_PixelColor   =  img.getRGB(row,column);                
                             
                             red                 = (image1_PixelColor & 0x00ff0000) >> 16;
                             green               = (image1_PixelColor & 0x0000ff00) >> 8;
                             blue                =  image1_PixelColor & 0x000000ff;

                             image2_PixelColor   =  ima.getRGB(row,column);
                             
                             red2                = (image2_PixelColor & 0x00ff0000) >> 16;
                             green2              = (image2_PixelColor & 0x0000ff00) >> 8;
                             blue2               =  image2_PixelColor & 0x000000ff;

                                   if (red != red2 || green != green2 || blue != blue2) {
                                       differenceRed   =  red - red2 / 255;
                                       differenceGreen = ( green - green2 ) / 255;
                                       differenceBlue  = ( blue - blue2 ) / 255;
                                       differenceForThisPixel = ( differenceRed + differenceGreen + differenceBlue ) / 3;
                                       nonSimilarPixels += differenceForThisPixel;
                                   }
                            total_no_ofPixels++;
                            if ( image1_PixelColor != image2_PixelColor ) {
                                ima.setRGB(row, column, Color.green.getGreen());
                            }
                       }
                   }
                    non_Similarity = (nonSimilarPixels / total_no_ofPixels);
                    System.out.println( "Total No of pixels : " + total_no_ofPixels +"\t Non Similarity is : " + non_Similarity +"%");
                    if(non_Similarity<=30){
                        JOptionPane.showMessageDialog(this,"Welcome "+n+" to Aadhaar Thumb : Dashboard");
                        String inQuery = "insert into logs values(?,?,?)";
                        PreparedStatement stmt1 = d.InsertConnect(inQuery);
                        String qr="SELECT Log_Id FROM logs ORDER BY Log_Id DESC LIMIT 1";
                        java.sql.Statement stmt2=d.SelectConnect();
                        ResultSet rsw=stmt2.executeQuery(qr);
                        int o=0;
                        while(rsw.next()){
                            o=rsw.getInt("Log_Id");}
                        stmt1.setInt(1,o+1);
                        stmt1.setTimestamp(2,tt);
                        stmt1.setString(3,""+n);
                        stmt1.executeUpdate();
                        this.setVisible(false);
                        new Main_Page().setVisible(true);
                    }
                    else if(non_Similarity>=40){
                        JOptionPane.showMessageDialog(this, "Sorry, please Register Manually First");
                    }
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Sorry no file Detected/Selected..");
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login_Page().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
